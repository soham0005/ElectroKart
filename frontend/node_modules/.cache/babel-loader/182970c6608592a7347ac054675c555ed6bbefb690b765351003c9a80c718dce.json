{"ast":null,"code":"const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","map":{"version":3,"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","dataAttr","dataProp","NavItem","jsx","_jsx","noop","EVENT_KEY_ATTR","Nav","forwardRef","_ref","ref","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveTab","offset","currentListNode","current","items","activeChild","querySelector","document","activeElement","index","nextIndex","handleSelect","event","handleKeyDown","nextActiveChild","preventDefault","dataset","focus","mergedRef","Provider","value","children","assign","displayName","Item"],"sources":["/home/abhi/ElectroKart/frontend/node_modules/@restart/ui/esm/Nav.js"],"sourcesContent":["const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}